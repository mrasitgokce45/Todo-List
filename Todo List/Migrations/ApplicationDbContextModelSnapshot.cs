// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Todo_List.Models;

namespace Todo_List.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Todo_List.Models.TodoHeader", b =>
                {
                    b.Property<int>("headerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserRolesroleId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("headerId");

                    b.HasIndex("UserRolesroleId");

                    b.HasIndex("userId");

                    b.ToTable("TodoHeader");
                });

            modelBuilder.Entity("Todo_List.Models.TodoList", b =>
                {
                    b.Property<int>("todoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserRolesroleId")
                        .HasColumnType("int");

                    b.Property<int>("headerId")
                        .HasColumnType("int");

                    b.Property<string>("todo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("todoHeaderheaderId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("todoId");

                    b.HasIndex("UserRolesroleId");

                    b.HasIndex("todoHeaderheaderId");

                    b.HasIndex("userId");

                    b.ToTable("TodoList");
                });

            modelBuilder.Entity("Todo_List.Models.UserRoles", b =>
                {
                    b.Property<int>("roleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("roleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Todo_List.Models.Users", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.Property<string>("surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userRolesroleId")
                        .HasColumnType("int");

                    b.HasKey("userId");

                    b.HasIndex("userRolesroleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Todo_List.Models.TodoHeader", b =>
                {
                    b.HasOne("Todo_List.Models.UserRoles", null)
                        .WithMany("todoHeaders")
                        .HasForeignKey("UserRolesroleId");

                    b.HasOne("Todo_List.Models.Users", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Todo_List.Models.TodoList", b =>
                {
                    b.HasOne("Todo_List.Models.UserRoles", null)
                        .WithMany("todoLists")
                        .HasForeignKey("UserRolesroleId");

                    b.HasOne("Todo_List.Models.TodoHeader", "todoHeader")
                        .WithMany("TodoLists")
                        .HasForeignKey("todoHeaderheaderId");

                    b.HasOne("Todo_List.Models.Users", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Todo_List.Models.Users", b =>
                {
                    b.HasOne("Todo_List.Models.UserRoles", "userRoles")
                        .WithMany("users")
                        .HasForeignKey("userRolesroleId");
                });
#pragma warning restore 612, 618
        }
    }
}
